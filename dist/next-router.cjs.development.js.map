{"version":3,"file":"next-router.cjs.development.js","sources":["../src/utils/index.ts","../src/Route/Route.ts","../src/utils/events.ts","../src/Router/Router.ts","../src/Link/Link.tsx","../src/hocs/withNextRouter.tsx","../src/index.ts"],"sourcesContent":["export const getUrlParams = (queryString: string) => {\r\n  if (!queryString) {\r\n    return {};\r\n  }\r\n  let hashes = queryString.split('&');\r\n  let params: { [key: string]: string | null } = {};\r\n  hashes.forEach(hash => {\r\n    let [key, val] = hash.split('=');\r\n    if (key) {\r\n      params[key] = val ? decodeURIComponent(val) : null;\r\n    }\r\n  });\r\n\r\n  return params;\r\n};\r\n","import { PathFunction, Key, pathToRegexp, compile } from 'path-to-regexp';\r\nimport { getUrlParams } from './../utils';\r\nimport { RouteMatch } from '../types';\r\n\r\nclass Route {\r\n  private page: string;\r\n  private keys: Key[];\r\n  private compiled: PathFunction;\r\n  private regex: RegExp;\r\n\r\n  constructor(pattern: string, page: string) {\r\n    this.page = page;\r\n    this.compiled = compile(pattern, { encode: encodeURIComponent });\r\n    this.keys = [];\r\n    // @ts-ignore\r\n    this.regex = pathToRegexp(pattern, this.keys);\r\n  }\r\n\r\n  private valuesToParams(values: any, keys: Key[]) {\r\n    return values.reduce((params: any, val: any, i: number) => {\r\n      if (val === undefined) return params;\r\n      return Object.assign(params, {\r\n        [keys[i].name]: decodeURIComponent(val),\r\n      });\r\n    }, {});\r\n  }\r\n\r\n  match(asPath: string): RouteMatch {\r\n    const asPathSplitted = asPath.split('#');\r\n    const asPathNoHash = asPathSplitted[0];\r\n\r\n    const asPathNoHashSplitted = asPathNoHash.split('?');\r\n    const asPathNoHashNoQuery = asPathNoHashSplitted[0];\r\n\r\n    // get query params\r\n    let queryParams = {};\r\n    if (asPathNoHashSplitted.length > 1) {\r\n      queryParams = getUrlParams(asPathNoHashSplitted[1]);\r\n    }\r\n\r\n    // get hash\r\n    const hash = asPathSplitted.length > 1 ? asPathSplitted[1] : '';\r\n\r\n    const match = this.regex.exec(asPathNoHashNoQuery);\r\n    if (match !== null) {\r\n      const params = this.valuesToParams(match.slice(1), this.keys);\r\n      return {\r\n        params,\r\n        query: queryParams,\r\n        hash,\r\n        path: asPath,\r\n        page: this.page,\r\n        matched: true,\r\n      };\r\n    }\r\n    return {\r\n      params: {},\r\n      query: queryParams,\r\n      hash: hash,\r\n      path: asPath,\r\n      page: '',\r\n      matched: false,\r\n    };\r\n  }\r\n\r\n  assemble(params: any): string {\r\n    const compiled = this.compiled(params);\r\n    return compiled === '' ? '/' : compiled.replace(/%23/g, '#');\r\n  }\r\n\r\n  getPage(): string {\r\n    return this.page;\r\n  }\r\n}\r\n\r\nexport default Route;\r\n","import { default as NextRouter } from 'next/router';\r\nimport Router from 'Router/Router';\r\n\r\ntype Handler = (...evts: any[]) => void;\r\n\r\nexport type Events = {\r\n  on(type: string, handler: Handler): void;\r\n  off(type: string, handler: Handler): void;\r\n};\r\n\r\ntype Handlers = { handler: Handler; handlerRouter: Handler };\r\n\r\ntype Cache = { [s: string]: Handlers[] };\r\n\r\nconst getHandlerRouter = (router: Router, handler: Handler) => (\r\n  ...evts: any[]\r\n) => {\r\n  let url = evts[0];\r\n  if (evts.length > 1 && typeof evts[1] === \"string\") {\r\n    url = evts[1];\r\n  }\r\n  const routerMatch = router.match(url);\r\n  const currentRoute = router.currentRouteFromMatch(routerMatch);\r\n  if (evts.length === 1) {\r\n    handler(currentRoute);\r\n  } else {\r\n    handler(evts[0], currentRoute);\r\n  }\r\n};\r\n\r\nconst findHandlersIndex = (arr: Handlers[], handler: Handler) => {\r\n  return arr.findIndex(handlers => {\r\n    return handlers.handler === handler;\r\n  });\r\n};\r\n\r\nexport default function events(router: Router): Events {\r\n  const all: Cache = Object.create(null);\r\n\r\n  return {\r\n    on(type: string, handler: Handler) {\r\n      const handlerRouter = getHandlerRouter(router, handler);\r\n      NextRouter.events.on(type, handlerRouter);\r\n      (all[type] || (all[type] = [])).push({ handler, handlerRouter });\r\n    },\r\n    off(type: string, handler: Handler) {\r\n      if (all[type]) {\r\n        const handlersIndex = findHandlersIndex(all[type], handler);\r\n        if (handlersIndex >= 0) {\r\n          const handlerRouter = all[type][handlersIndex].handlerRouter;\r\n          NextRouter.events.off(type, handlerRouter);\r\n          all[type].splice(handlersIndex, 1);\r\n        }\r\n      }\r\n    },\r\n  };\r\n}\r\n","import { default as NextRouter } from 'next/router';\r\nimport {\r\n  RouterMatch,\r\n  CurrentRoute,\r\n  Routes,\r\n  RouteAssemble,\r\n  LinkProps,\r\n} from '../types';\r\nimport Route from '../Route';\r\nimport events, { Events } from '../utils/events';\r\n\r\nclass Router {\r\n  private routes: { [key: string]: Route } = {};\r\n  private currentRoute: CurrentRoute = null;\r\n  public events: Events;\r\n\r\n  constructor(routes: Routes) {\r\n    this.setRoutes(routes);\r\n    this.events = events(this);\r\n  }\r\n\r\n  setRoutes(routes: Routes): void {\r\n    this.routes = {};\r\n    this.addRoutes(routes);\r\n  }\r\n\r\n  addRoutes(routes: Routes): void {\r\n    for (const route in routes) {\r\n      if (!routes.hasOwnProperty(route)) {\r\n        continue;\r\n      }\r\n      this.routes[route] = new Route(routes[route].pattern, routes[route].page);\r\n    }\r\n  }\r\n\r\n  getRoutes(): { [key: string]: Route } {\r\n    return this.routes;\r\n  }\r\n\r\n  match(asPath: string): RouterMatch {\r\n    for (const route in this.routes) {\r\n      if (!this.routes.hasOwnProperty(route)) {\r\n        continue;\r\n      }\r\n\r\n      const matched = this.routes[route].match(asPath);\r\n      if (matched.matched) {\r\n        return { ...matched, route };\r\n      }\r\n    }\r\n\r\n    return {\r\n      route: '',\r\n      params: {},\r\n      query: {},\r\n      path: asPath,\r\n      page: '',\r\n      hash: '',\r\n      matched: false,\r\n    };\r\n  }\r\n\r\n  assemble(route: string, params: any): RouteAssemble {\r\n    if (this.routes[route]) {\r\n      return {\r\n        path: this.routes[route].assemble(params),\r\n        page: this.routes[route].getPage(),\r\n      };\r\n    }\r\n    throw new Error('next-router: No route matched');\r\n  }\r\n\r\n  getLinkProps(route: string, params: any = {}, hash: string = ''): LinkProps {\r\n    const assembled = this.assemble(route, params);\r\n    const hashSuffix = hash !== '' ? `#${hash}` : '';\r\n    return {\r\n      href: { pathname: assembled.page, query: params },\r\n      as: `${assembled.path}${hashSuffix}`,\r\n    };\r\n  }\r\n\r\n  getLinkPropsFromHref(\r\n    href: string,\r\n    transformFn: (href: string) => string = href => href\r\n  ): LinkProps {\r\n    const hrefSlash = href.substr(0, 1) !== '/' ? `/${href}` : href;\r\n    const match = this.match(transformFn(hrefSlash));\r\n    if (match.matched) {\r\n      return this.getLinkProps(match.route, match.params, match.hash);\r\n    }\r\n    return {\r\n      href,\r\n      as: href,\r\n    };\r\n  }\r\n\r\n  push(\r\n    route: string,\r\n    params: any = {},\r\n    hash: string = '',\r\n    options: any = {}\r\n  ): Promise<boolean> {\r\n    const props = this.getLinkProps(route, params, hash);\r\n    return NextRouter.push(props.href, props.as, options);\r\n  }\r\n\r\n  pushHref(href: string, options: any = {}): Promise<boolean> {\r\n    const props = this.getLinkPropsFromHref(href);\r\n    return NextRouter.push(props.href, props.as, options);\r\n  }\r\n\r\n  replace(\r\n    route: string,\r\n    params: any = {},\r\n    hash: string = '',\r\n    options: any = {}\r\n  ): Promise<boolean> {\r\n    const props = this.getLinkProps(route, params, hash);\r\n    return NextRouter.replace(props.href, props.as, options);\r\n  }\r\n\r\n  replaceHref(href: string, options: any = {}): Promise<boolean> {\r\n    const props = this.getLinkPropsFromHref(href);\r\n    return NextRouter.replace(props.href, props.as, options);\r\n  }\r\n\r\n  getRequestHandler(renderFunction: Function) {\r\n    return (req: any, res: any, next: any) => {\r\n      // don't render next url's\r\n      const isNextUrl = req.url.match(/^\\/_next|^\\/static/);\r\n      if (isNextUrl) {\r\n        return next();\r\n      }\r\n\r\n      // try to match request url\r\n      const { matched, route, page, params, query, hash } = this.match(req.url);\r\n\r\n      if (matched) {\r\n        // set current route for later access\r\n        this.setCurrentRoute({ route, page, params, query, hash });\r\n\r\n        // call render function\r\n        if (renderFunction) {\r\n          return renderFunction(req, res, page, params, query, route);\r\n        }\r\n      }\r\n\r\n      next();\r\n    };\r\n  }\r\n\r\n  currentRouteFromMatch(routerMatch: RouterMatch): CurrentRoute {\r\n    const { route, page, params, query, hash } = routerMatch;\r\n    return {\r\n      route,\r\n      page,\r\n      params,\r\n      query,\r\n      hash,\r\n    };\r\n  }\r\n\r\n  setCurrentRoute(currentRoute: CurrentRoute) {\r\n    this.currentRoute = currentRoute;\r\n  }\r\n\r\n  getCurrentRoute(): CurrentRoute {\r\n    return this.currentRoute;\r\n  }\r\n}\r\n\r\nexport default Router;\r\n","import * as React from 'react';\r\nimport NextLink from 'next/link';\r\nimport Router from '../Router';\r\n\r\nexport type LinkProps = {\r\n  route?: string;\r\n  params?: any;\r\n  hash?: string;\r\n  href?: string;\r\n  children: React.ReactElement<any>;\r\n  [key: string]: any;\r\n};\r\n\r\nconst Link = (router: Router) => ({\r\n  route,\r\n  params = {},\r\n  hash = '',\r\n  href,\r\n  children,\r\n  ...props\r\n}: LinkProps) => {\r\n  if (!route && !href) {\r\n    throw new Error(\r\n      'next-router: You have to provide a route or a href to the Link'\r\n    );\r\n  }\r\n\r\n  let mergedProps;\r\n\r\n  if (route) {\r\n    mergedProps = { ...router.getLinkProps(route, params, hash), ...props };\r\n  } else {\r\n    mergedProps = { ...router.getLinkPropsFromHref(href || ''), ...props };\r\n  }\r\n\r\n  return <NextLink {...mergedProps}>{children}</NextLink>;\r\n};\r\n\r\nexport default Link;\r\n","import * as React from 'react';\r\nimport { NextComponentType } from 'next';\r\nimport { AppContext } from 'next/app';\r\nimport Router from './../Router';\r\nimport { CurrentRoute, RouterMatch } from './../types';\r\n\r\ninterface WrappedAppProps {\r\n  initialProps: any;\r\n  nextRouter_currentRoute: CurrentRoute;\r\n}\r\n\r\nconst getRouterMatch = (appCtx: AppContext, router: Router): RouterMatch => {\r\n  const asPath = appCtx.ctx.asPath || '';\r\n  return router.match(asPath);\r\n};\r\n\r\nexport default (\r\n  router: Router,\r\n  getRouterMatchFunction?: (appCtx: AppContext, router: Router) => RouterMatch\r\n) => {\r\n  if (!getRouterMatchFunction) {\r\n    getRouterMatchFunction = getRouterMatch;\r\n  }\r\n\r\n  return (App: NextComponentType | any) =>\r\n    class WrappedApp extends React.Component<WrappedAppProps> {\r\n      public static getInitialProps = async (appCtx: AppContext) => {\r\n        let initialProps = {};\r\n\r\n        let routerMatch: RouterMatch = {\r\n          route: '',\r\n          params: {},\r\n          query: {},\r\n          path: '',\r\n          page: '',\r\n          hash: '',\r\n          matched: false,\r\n        };\r\n\r\n        if (getRouterMatchFunction) {\r\n          routerMatch = getRouterMatchFunction(appCtx, router);\r\n        }\r\n\r\n        if (!routerMatch.matched) {\r\n          if (appCtx.ctx.res) {\r\n            appCtx.ctx.res.statusCode = 404;\r\n          }\r\n        }\r\n\r\n        const { route, page, params, query, hash } = routerMatch;\r\n        const nextRouter_currentRoute = { route, page, params, query, hash };\r\n        router.setCurrentRoute(nextRouter_currentRoute);\r\n\r\n        appCtx.ctx.query = { ...query, ...params };\r\n\r\n        if ('getInitialProps' in App) {\r\n          initialProps = await App.getInitialProps.call(App, appCtx);\r\n        }\r\n\r\n        return {\r\n          nextRouter_currentRoute,\r\n          initialProps,\r\n        };\r\n      };\r\n\r\n      public render() {\r\n        const { initialProps, nextRouter_currentRoute, ...props } = this.props;\r\n\r\n        // set current route on hydration\r\n        if (!router.getCurrentRoute()) {\r\n          router.setCurrentRoute(nextRouter_currentRoute);\r\n        }\r\n\r\n        return <App {...props} {...initialProps} />;\r\n      }\r\n    };\r\n};\r\n","import NextLink from 'next/link';\r\nimport Router from './Router';\r\nimport Link from './Link';\r\nimport withNextRouterFactory from './hocs/withNextRouter';\r\nimport { CurrentRoute, RouterMatch, Routes } from './types';\r\nimport { AppContext } from 'next/app';\r\n\r\nlet router: Router;\r\nlet link;\r\nlet withNextRouter;\r\n\r\ninterface Constructable<T> {\r\n  new (routes: Routes): T;\r\n}\r\n\r\nexport const init = (\r\n  routes: Routes,\r\n  RouterClass?: Constructable<Router>,\r\n  LinkFactory?: (router: Router) => typeof NextLink,\r\n  getRouterMatchFunction?: (appCtx: AppContext, router: Router) => RouterMatch\r\n) => {\r\n  router = RouterClass ? new RouterClass(routes) : new Router(routes);\r\n  link = LinkFactory ? LinkFactory(router) : Link(router);\r\n  withNextRouter = withNextRouterFactory(router, getRouterMatchFunction);\r\n};\r\n\r\nconst useRouter = (): CurrentRoute => {\r\n  if (!router) {\r\n    throw new Error(\r\n      'next-router: Router is not set. You have to initialize next-router first.'\r\n    );\r\n  }\r\n  return router.getCurrentRoute();\r\n};\r\n\r\nexport { Router as RouterClass, Link as LinkFactory, withNextRouterFactory };\r\nexport { router as Router };\r\nexport { link as Link };\r\nexport { withNextRouter, useRouter };\r\nexport { default as RouteClass } from './Route';\r\nexport {\r\n  Routes,\r\n  RouteMatch,\r\n  RouteAssemble,\r\n  LinkProps,\r\n  CurrentRoute,\r\n} from './types';\r\n"],"names":["getUrlParams","queryString","hashes","split","params","forEach","hash","key","val","decodeURIComponent","Route","pattern","page","compiled","compile","encode","encodeURIComponent","keys","regex","pathToRegexp","valuesToParams","values","reduce","i","undefined","Object","assign","name","match","asPath","asPathSplitted","asPathNoHash","asPathNoHashSplitted","asPathNoHashNoQuery","queryParams","length","exec","slice","query","path","matched","assemble","replace","getPage","getHandlerRouter","router","handler","url","routerMatch","currentRoute","currentRouteFromMatch","findHandlersIndex","arr","findIndex","handlers","events","all","create","on","type","handlerRouter","NextRouter","push","off","handlersIndex","splice","Router","routes","setRoutes","addRoutes","route","hasOwnProperty","getRoutes","Error","getLinkProps","assembled","hashSuffix","href","pathname","as","getLinkPropsFromHref","transformFn","hrefSlash","substr","options","props","pushHref","replaceHref","getRequestHandler","renderFunction","req","res","next","isNextUrl","setCurrentRoute","getCurrentRoute","Link","children","mergedProps","React","NextLink","getRouterMatch","appCtx","ctx","getRouterMatchFunction","App","render","initialProps","nextRouter_currentRoute","_a","statusCode","getInitialProps","call","init","RouterClass","LinkFactory","link","withNextRouter","withNextRouterFactory","useRouter"],"mappings":"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"}